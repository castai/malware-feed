

class TestVersionParsing:
    def test_regular_semantic_version(self):
        vers = src.normalize_version("1.2.3")
        assert vers == src.SemVer(1, 2, 3)

    def test_major_minor_semantic_version(self):
        vers = src.normalize_version("1.2")
        assert vers == src.SemVer(1, 2, 0)

    def test_only_major_semantic_version(self):
        vers = src.normalize_version("1")
        assert vers == src.SemVer(1, 0, 0)

    def test_semantic_version_with_v_prefix(self):
        vers = src.normalize_version("v1.2.3")
        assert vers == src.SemVer(1, 2, 3)

    def test_only_major_semantic_version_with_v_prefix(self):
        vers = src.normalize_version("v1")
        assert vers == src.SemVer(1, 0, 0)

    def test_semantic_version_with_label(self):
        lbl = "alpha"
        vers = src.normalize_version(f"1.2.3-{lbl}")
        assert vers == src.SemVer(1, 2, 3, label=lbl)

    def test_malformed_label_without_dash(self):
        lbl = "alpha"
        vers = src.normalize_version(f"1.2.3{lbl}")
        assert vers == src.SemVer(1, 2, 3, label=lbl)

    def test_version_with_prefix_and_label(self):
        lbl = "alpha"
        vers = src.normalize_version(f"vers10.20.30{lbl}")
        assert vers == src.SemVer(10, 20, 30, label=lbl)


class TestVersionIsPrintedAsString:
    def test_regular_semantic_version(self):
        lbl = "alpha"
        vers = src.SemVer(1, 2, 3, label=lbl)
        assert str(vers) == f"1.2.3-{lbl}"
