package feed

import (
	"encoding/csv"
	"errors"
	"fmt"
	"io"
	"log/slog"
	"os"

	"github.com/castai/malware-feed/internal/domain"
)

type Entry struct {
	Name     string        `csv:"name"`
	Category string        `csv:"category"`
	Version  domain.SemVer `csv:"version"`
	Variant  string        `csv:"variant"`
	Sha256   string        `csv:"sha256"`
}

// Load reads the feed from the provided path and returns a list of entries
// The feed is expected to be in CSV format with the following columns:
// `name,category,version,variant,sha256`
func Load(path string) ([]Entry, error) {

	// read CSV from file provided in path
	file, err := os.Open(path)
	if err != nil {
		slog.Error("Error while reading the feed", err)
		return nil, err
	}
	defer file.Close()

	entries := []Entry{}
	reader := csv.NewReader(file)
	_, err = reader.Read() // skip the header
	if err != nil {
		slog.Error("Error while reading the feed")
	}

	for {
		row, err := reader.Read()
		if err != nil {
			if errors.Is(err, io.EOF) {
				err = nil // file was successfully read to the end
			}
			return entries, err
		}

		version := domain.ParseVersion(row[2])

		entries = append(entries, Entry{
			Name:     row[0],
			Category: row[1],
			Version:  version,
			Variant:  row[3],
			Sha256:   row[4],
		})
	}
}

func Save(feed []Entry, path string) error {
	fmt.Println("TODO: imlement save feed")

	return nil
}
