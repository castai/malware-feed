package domain

import (
	"log/slog"
	"regexp"
	"strconv"
	"strings"
)

type SemVer struct {
	Major int
	Minor int
	Patch int
	Label string
}

var semVerPattern = regexp.MustCompile(`(?P<major>\d+)\.?(?P<minor>\d+)*\.?(?P<patch>\d+)*(?P<label>\S*)`)

func ParseVersion(version string) SemVer {
	if len(version) == 0 {
		return SemVer{0, 0, 0, ""}
	}
	matches := semVerPattern.FindStringSubmatch(version)
	major, err := strconv.Atoi(matches[1])
	if err != nil {
		slog.Error("Error while parsing major version: " + matches[1])
	}
	minor, _ := strconv.Atoi(matches[2])
	if err != nil {
		slog.Error("Error while parsing minor version: " + matches[2])
	}
	patch, _ := strconv.Atoi(matches[3])
	if err != nil {
		slog.Error("Error while parsing patch version: " + matches[3])
	}
	label := strings.Trim(matches[4], "-.")
	return SemVer{major, minor, patch, label}
}
